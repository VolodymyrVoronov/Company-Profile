{"version":3,"sources":["js/main.js"],"names":["form","document","querySelector","inputANameOfACompany","foundCompanies","resultsOfTheSearch","focus","getListOfCompanies","endpoint","response","fetch","data","json","symbolsList","getProfileOfACompany","symbol","updateUI","profile","findACompanyByName","name","filter","element","toString","includes","error","console","log","getInfo","company","text","forEach","showAmountOfCompanies","checkIfEmpty","amount","length","html","innerHTML","price","companyName","industry","website","description","ceo","sector","image","showProgressBar","addEventListener","e","preventDefault","value","trim","then","reset"],"mappings":";AAAA,MAAMA,EAAOC,SAASC,cAAc,kBAC9BC,EAAuBH,EAAKE,cAAc,gBAC1CE,EAAiBJ,EAAKE,cAAc,4BACpCG,EAAqBJ,SAASC,cAAc,oBAGlDC,EAAqBG,QAErBC,mBAAqB,WACbC,MACAC,QAAiBC,MADN,+DAGVC,aADYF,EAASG,QAChBC,cAGdC,qBAAuB,OAAA,IACfN,MACAC,QAAiBC,MADN,4DACuBK,GAClCJ,QAAaF,EAASG,OAC5BI,SAASL,EAAKM,WAGhBC,mBAAqB,EAACP,EAAMQ,IACnBR,EAAKS,OAAOC,IACb,IACEA,GAAAA,EAAQF,KAAKG,WAAWC,SAASJ,GAC5BE,OAAAA,EAAQN,OAEjB,MAAOS,GACPC,QAAQC,IAAIF,OAKlBG,QAAU,OAAA,IACFhB,MAAAA,QAAaJ,qBACbqB,QAAgBV,mBAAmBP,EAAMkB,GAC/CD,EAAQE,QAAQT,IACdP,qBAAqBO,EAAQN,UAE/BgB,sBAAsBH,KAGxBI,aAAgBrB,CAAAA,GACD,OAATA,GAA0B,KAATA,EACZ,gBAEFA,GAGToB,sBAAyBE,CAAAA,IACnBA,EAAOC,OAAS,EAClBC,uDAC2CF,EAAOC,kCAGlDC,uDAC2CF,EAAOC,gCAGpD9B,EAAegC,UAAYD,OAG7BnB,SAAYL,CAAAA,IACJwB,MAAAA,gGAEqDH,aAAarB,EAAK0B,0EACrBL,aAAarB,EAAK2B,0EACtBN,aAAarB,EAAK4B,8EACXP,aAAarB,EAAK6B,8BAA8BR,aAAarB,EAAK6B,6EACtER,aAAarB,EAAK8B,qEAC1BT,aAAarB,EAAK+B,gEACfV,aAAarB,EAAKgC,0EACXX,aAAarB,EAAKiC,wEAI3EvC,EAAmB+B,WAAaD,IAGlCU,gBAAkB,MAIhBzC,EAAegC,UAHA,uEAMjBpC,EAAK8C,iBAAiB,SAAUC,IAC9BA,EAAEC,iBAEFrB,QAAQxB,EAAqB8C,MAAMC,QAChCC,KAAKN,mBACLM,KAAK3B,GAASC,QAAQC,IAAIF,IAC7BxB,EAAKoD,QACL/C,EAAmB+B,UAAY","file":"main.6fd9894f.js","sourceRoot":"..\\app","sourcesContent":["const form = document.querySelector('.content__form');\nconst inputANameOfACompany = form.querySelector('.from__input');\nconst foundCompanies = form.querySelector('.form__found-comp-output');\nconst resultsOfTheSearch = document.querySelector('.content__output');\n\n\ninputANameOfACompany.focus();\n\ngetListOfCompanies = async () => {\n  const endpoint = 'https://financialmodelingprep.com/api/v3/company/stock/list';\n  const response = await fetch(endpoint);\n  const data = await response.json();\n  return data.symbolsList;\n}\n\ngetProfileOfACompany = async symbol => {\n  const endpoint = 'https://financialmodelingprep.com/api/v3/company/profile/';\n  const response = await fetch(endpoint + symbol);\n  const data = await response.json();\n  updateUI(data.profile);\n}\n\nfindACompanyByName = (data, name) => {\n  return data.filter(element => {\n    try {\n      if (element.name.toString().includes(name)) {\n        return element.symbol;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  });\n}\n\ngetInfo = async (text) => {\n  const data = await getListOfCompanies();\n  const company = await findACompanyByName(data, text);\n  company.forEach(element => {\n    getProfileOfACompany(element.symbol);\n  });\n  showAmountOfCompanies(company);\n}\n\ncheckIfEmpty = (data) => {\n  if (data === null || data === '') {\n    return 'not available';\n  }\n  return data;\n}\n\nshowAmountOfCompanies = (amount) => {\n  if (amount.length > 1) {\n    html = (`\n    <p class=\"form__found-comp\">Found: <span>${amount.length}</span> companies</p>\n  `);\n  } else {\n    html = (`\n    <p class=\"form__found-comp\">Found: <span>${amount.length}</span> company</p>\n  `);\n  }\n  foundCompanies.innerHTML = html;\n}\n\nupdateUI = (data) => {\n  const html = (`\n  <ul class=\"output__items\">\n    <li class=\"output__item\"><span>Price per share:</span> ${checkIfEmpty(data.price)} $</li>\n    <li class=\"output__item\"><span>Company name:</span> ${checkIfEmpty(data.companyName)}</li>\n    <li class=\"output__item\"><span>Industry:</span> ${checkIfEmpty(data.industry)}</li>\n    <li class=\"output__item\"><span>Website:</span><a href=\"${checkIfEmpty(data.website)}\" target=\"_blank\"> ${checkIfEmpty(data.website)}</a></li>\n    <li class=\"output__item\"><span>Description:</span> ${checkIfEmpty(data.description)}</li>\n    <li class=\"output__item\"><span>CEO:</span> ${checkIfEmpty(data.ceo)}</li>\n    <li class=\"output__item\"><span>Sector:</span> ${checkIfEmpty(data.sector)}</li>\n    <li class=\"output__item output__item--img\"><img src=\"${checkIfEmpty(data.image)}\" alt=\"Logo\"></li>\n    <li class=\"output__item\">\n  </ul> \n  `);\n  resultsOfTheSearch.innerHTML += html;\n}\n\nshowProgressBar = () => {\n  const html = (`\n    <div class=\"lds\"><div></div><div></div><div></div></div>\n  `);\n  foundCompanies.innerHTML = html;\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  getInfo(inputANameOfACompany.value.trim())\n    .then(showProgressBar())\n    .then(error => console.log(error));\n  form.reset();\n  resultsOfTheSearch.innerHTML = '';\n});"]}